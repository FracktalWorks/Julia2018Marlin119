#!/usr/bin/env bash

PROJECT_NAME="Julia2018Marlin"
DIST_NAME=$(date '+%Y%m%d_%H%M')
declare -a VARIANT=("JULIA_2018_GLCD" "JULIA_2018_GLCD_HB" "JULIA_2018_RPI" "JULIA_2018_RPI_E")

# static paths
SRC="${TRAVIS_BUILD_DIR}/src"
SRC_MARLIN="${SRC}/Marlin/Marlin"
SRC_COMMON="${SRC}/common"
STAGING_SUB="${TRAVIS_BUILD_DIR}/staging/${PROJECT_NAME}"
STAGING_SUB_INO="${STAGING_SUB}/${PROJECT_NAME}.ino"
OUTPUT="${TRAVIS_BUILD_DIR}/output"
OUTPUT_SUB="${OUTPUT}/${DIST_NAME}"

# check for marlin
if [ ! -f "${SRC_MARLIN}/Marlin.ino" ]; then
	specho 1 "Marlin not found"
	exit 1
fi

#check for source
if [ ! -d "${SRC_COMMON}" ]; then
	specho 1 "Source not found"
	exit 1
fi


# ls "${SRC_MARLIN}"
# ls "${SRC_COMMON}"

# make staging build dir
mkdir -p "${STAGING_SUB}"

# copy marlin files
cp -Rf "${SRC_MARLIN}"/* "${STAGING_SUB}"/
# overwrite marlin files with source
cp -Rf "${SRC_COMMON}"/* "${STAGING_SUB}"/
# rename marlin ino in staging build
mv "${STAGING_SUB}/Marlin.ino" "${STAGING_SUB_INO}"

# make output dir
mkdir -p "${OUTPUT_SUB}"

for (( i=0; i<4; i++ )); do
	# dynamic paths
	BUILD_I="${TRAVIS_BUILD_DIR}/build_${i}"
	BUILD_I_HEX="${BUILD_I}/${PROJECT_NAME}.ino.hex"
	# OUTPUT_HEX="${OUTPUT}/${VARIANT[$i]}_${DIST_NAME}_mega.hex"
	OUTPUT_HEX="${OUTPUT_SUB}/${VARIANT[$i]}_mega.hex"
	DROPBOX_FOLDER="/FW_JULIA2018_MARLIN_HEX"
	# make build dir
	mkdir -p "${BUILD_I}"
	# set arduino build dir
	eval "arduino --pref build.path=\"${BUILD_I}\" --board arduino:avr:mega:cpu=atmega2560 --save-prefs"
	RET1=$?
	if [ $RET1 -ne 0 ]; then
		specho 1 "Arduino CLI error setting build preferences"
		exit $RET1
	fi
	# generate variant
	header "${STAGING_SUB}" ${i}
	# compile INO
	eval "arduino --verify \"${STAGING_SUB_INO}\""
	RET2=$?
	if [ $RET2 -ne 0 ]; then
		specho 1 "Arduino CLI build failed"
		exit $RET2
	fi
	# check for compiled hex
	if [ -f "${BUILD_I_HEX}" ]; then
		cp "${BUILD_I_HEX}" "${OUTPUT_HEX}"
	fi
done
specho 2 "ls ${OUTPUT_SUB}"
ls "${OUTPUT_SUB}"

eval "find ${OUTPUT_SUB}/ -maxdepth 1 -type f -name '*.hex' | wc -l"
RET3=$?
if [ $RET3 -eq 0 ]; then
	specho 1 "Hex files not generated"
	exit $RET3
fi
specho 2 "Uploading..."
eval "dbu upload \"${OUTPUT_SUB}\"/ \"${DROPBOX_FOLDER}\"/"
RET4=$?
if [ $RET4 -eq 0 ]; then
	specho 1 "Hex files not uploaded"
	exit $RET4
fi
# for i in "${OUTPUT}"/*; do
	# if [ "${i}" != "${i%.hex}" ]; then
		# specho 3 " $i"
	# fi
# done

specho 2 "Done!"

exit 0