#!/usr/bin/env bash
# reversion

echo "Fracktal Works Marlin Version and variant Generator"
echo " "
echo " Parameters:"
echo " 1: JULIA_2018_GLCD"
echo " 2: JULIA_2018_GLCD_HB"
echo " 3: JULIA_2018_RPI"
echo " 4: JULIA_2018_RPI_E"
echo " "

declare -a VARIANTS=("JULIA_2018_GLCD" "JULIA_2018_GLCD_HB" "JULIA_2018_RPI" "JULIA_2018_RPI_E")
declare -a SHORT_VARIANTS=("J18GX" "J18GB" "J18RX" "J18RE")

if [[ -z "$1" ]] 
then
	exit 1
fi

if [[ $1 -lt 1 || $1 -gt 4 ]] 
then
	echo "Invalid parameters"
	exit 1
fi

P1=$1-1

STAGING_NAME="Julia2018Marlin"
CWD="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ROOT="${CWD}/../"
SRC="${ROOT}/src"
SRC_MARLIN="${SRC}/Marlin/Marlin"
SRC_MARLIN_INO="${SRC}/Marlin/Marlin/Marlin.ino"
SRC_COMMON="${SRC}/common"
STAGING="${ROOT}/staging"
STAGING_BUILD="${STAGING}/${STAGING_NAME}"
STAGING_BUILD_INO="${STAGING_BUILD}/${STAGING_NAME}.ino"

if [ ! -f $SRC_MARLIN_INO ]
then
	echo "Marlin not found"
	exit 1
fi

if [ ! -d $SRC_COMMON ]
then
	echo "Source not found"
	exit 1
fi

rm -rfv "${STAGING}/*"
mkdir -p $STAGING_BUILD

BUILDATE=$(date '+%s')
DISTDATE=$(date '+%Y-%m-%d %H:%M')
SBV1=$(date '+%y%m%d_%H%M')
SHORT_BUILD_VERSION=$(echo "${SHORT_VARIANTS[${P1}]}_${SBV1^^}")
DETAILED_BUILD_VERSION=$(echo "${SHORT_BUILD_VERSION}_HA")

echo "Generating build for version ${DETAILED_BUILD_VERSION}"

cat > "${SRC_COMMON}/_Version.h" <<EOF
/**
 * THIS FILE IS AUTOMATICALLY GENERATED DO NOT MANUALLY EDIT IT.
 * IT DOES NOT GET COMMITTED TO THE REPOSITORY.
 */

#define BUILD_UNIX_DATETIME "${BUILDATE}"
#define STRING_DISTRIBUTION_DATE "${DISTDATE}"

#define SHORT_BUILD_VERSION "${SHORT_BUILD_VERSION}"
#define DETAILED_BUILD_VERSION "${DETAILED_BUILD_VERSION}"

#define REQUIRED_CONFIGURATION_H_VERSION 010100
#define REQUIRED_CONFIGURATION_ADV_H_VERSION 010100
#define PROTOCOL_VERSION "1.0"
#define MACHINE_NAME "Julia 2018"
#define SOURCE_CODE_URL "https://github.com/aharshac/FWJulia2018Marlin"
#define DEFAULT_MACHINE_UUID "cede2a2f-41a2-4748-9b12-c55c62f367ff"
#define WEBSITE_URL "https://fracktal.in"
EOF

cat > "${SRC_COMMON}/_FracktalWorks.h" <<EOF
#ifndef _FRACKTAL_WORKS_H
#define _FRACKTAL_WORKS_H

#define JULIA_2018_GLCD				0
#define JULIA_2018_GLCD_HB		1
#define JULIA_2018_RPI				2
#define JULIA_2018_RPI_E			3

#define VARIANT ${VARIANTS[${P1}]}

#ifndef VARIANT
	#error "Variant not defined"
#endif

#define BV(var) (VARIANT == var)

#endif // _FRACKTAL_WORKS_H
EOF

cp -Rf "${SRC_MARLIN}/*" "${STAGING_BUILD}/"
cp -Rf "${SRC_COMMON}/*" "${STAGING_BUILD}/"
mv $SRC_MARLIN_INO $STAGING_BUILD_INO